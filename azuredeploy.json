{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.2",
  "parameters": {
    "vmAdminUserName": {
      "type": "string",
      "metadata": {
        "description": "VM admin user name"
      }
    },
    "vmAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "VM admin password. The supplied password must be between 8-123 characters long and must satisfy at least 3 of password complexity requirements from the following: 1) Contains an uppercase character 2) Contains a lowercase character 3) Contains a numeric digit 4) Contains a special character."
      }
    },
    "vmVisualStudioVersion": {
      "type": "string",
      "defaultValue": "VS-2017-Ent-Latest-Win10-N",
      "allowedValues": [
        "VS-2015-Comm-VSU3-AzureSDK-29-Win10-N",
        "VS-2015-Comm-VSU3-AzureSDK-29-WS2012R2",
        "VS-2015-Ent-VSU3-AzureSDK-29-Win10-N",
        "VS-2015-Ent-VSU3-AzureSDK-29-WS2012R2",
        "VS-2017-Comm-Latest-Preview-WS2016",
        "VS-2017-Comm-Latest-Win10-N",
        "VS-2017-Comm-Latest-WS2016",
        "VS-2017-Comm-Win10-N",
        "VS-2017-Comm-WS2016",
        "VS-2017-Ent-Latest-Preview-WS2016",
        "VS-2017-Ent-Latest-Win10-N",
        "VS-2017-Ent-Latest-WS2016",
        "VS-2017-Ent-Win10-N",
        "VS-2017-Ent-WS2016"
      ],
      "metadata": {
        "description": "Which version of Visual Studio you would like to deploy"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "scriptType": {
      "type": "string",
      "defaultValue": "download",
      "metadata": {
        "description": "specification of script code: inline or download"
      },
      "allowedValues": [
        "inline",
        "download"
      ]
    },
    "downloadType": {
      "type": "string",
      "defaultValue": "Storage Account",
      "allowedValues": [
        "Storage Account",
        "Public URL"
      ],
      "metadata": {
        "description": "When using a download location, specify to use a Storage account or a public URL."
      }
    },
    "scriptLocation": {
      "type": "string",
      "metadata": {
        "description": "Provide the toplevel download URL."
      },
      "defaultValue": "https://sawin10poc.blob.core.windows.net/",
      "allowedValues": [
        "https://raw.githubusercontent.com/wkasdorp/win10-poc/master/",
        "https://sawin10poc.blob.core.windows.net/"
      ]   
    },
    "storageAccountName": {
      "type": "securestring",
      "metadata": {
        "description": "When using a storage account, provide the storage account name."
      },
      "defaultValue": "sawin10poc"
    },
    "storageAccountkey": {
      "type": "securestring",
      "metadata": {
        "description": "When using a storage account, provide the Storage Account key."
      },
      "defaultValue": ""
    }
  },
  "variables": {
    "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'visstudiovm')]",
    "storageType": "Premium_LRS",
    "vmSize": "Standard_DS2",
    "vmName": "[concat(substring(parameters('vmVisualStudioVersion'),0,8), 'vm')]",
    "vnet01Prefix": "10.0.0.0/16",
    "vnet01Subnet1Name": "Subnet-1",
    "vnet01Subnet1Prefix": "10.0.0.0/24",
    "vmImagePublisher": "MicrosoftVisualStudio",
    "vmImageOffer": "VisualStudio",
    "vmOSDiskName": "VMOSDisk",
    "vmSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', 'Vnet01', variables('Vnet01Subnet1Name'))]",
    "vmStorageAccountContainerName": "vhds",
    "vmNicName": "[concat(variables('vmName'), '-nic')]",
    "vmIP01Name": "VMIP01",
    "scriptFolderName": "scripts/",
    "scriptName": "Enable-WinRM.ps1",
    "scriptDownload": "[concat(parameters('scriptLocation'), variables('scriptFoldername'), variables('scriptName'))]",
    "commandToExecute": "[concat('powershell.exe -ExecutionPolicy Unrestricted -File ',variables('scriptName'),' -SkipNetworkProfileCheck $true')]"
  },
  "resources": [
    {
      "name": "[variables('storageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[parameters('location')]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "properties": {
        "accountType": "[variables('storageType')]"
      }
    },
    {
      "name": "VNet01",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[parameters('location')]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnet01Prefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('vnet01Subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('vnet01Subnet1Prefix')]"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('vmNicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[parameters('location')]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', 'Vnet01')]",
        "[concat('Microsoft.Network/publicIPAddresses/', variables('vmIP01Name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vmSubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('vmIP01Name'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[variables('vmName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[parameters('location')]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('vmNicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('vmAdminUsername')]",
          "adminPassword": "[parameters('vmAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('vmImagePublisher')]",
            "offer": "[variables('vmImageOffer')]",
            "sku": "[parameters('vmVisualStudioVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "VMOSDisk",
            "vhd": {
              "uri": "[concat('http://', variables('storageAccountName'), '.blob.core.windows.net/', variables('vmStorageAccountContainerName'), '/', variables('vmOSDiskName'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vmNicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "2018-06-01",
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(variables('vmName'),'/vmInlineScript')]",
          "location": "[parameters('location')]",
          "condition": "[equals(parameters('scriptType'),'inline')]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.8",
            "autoUpgradeMinorVersion": true,
            "protectedSettings": {
              "commandToExecute": "powershell.exe -ExecutionPolicy Unrestricted -encodedcommand RQBuAGEAYgBsAGUALQBQAFMAUgBlAG0AbwB0AGkAbgBnACAALQBmAG8AcgBjAGUA"
            }
          }
        },
        {
          "apiVersion": "2018-06-01",
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(variables('vmName'),'/vmDownloadScriptPublic')]",
          "location": "[parameters('location')]",
          "condition": "[and(equals(parameters('scriptType'),'download'), equals(parameters('downloadType'),'Public URL'))]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.8",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[variables('scriptDownload')]"
              ],
              "commandToExecute": "[variables('commandToExecute')]"
            }
          }
        },
        {
          "apiVersion": "2018-06-01",
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(variables('vmName'),'/vmDownloadScriptStorageAccount')]",
          "location": "[parameters('location')]",
          "condition": "[and(equals(parameters('scriptType'),'download'), equals(parameters('downloadType'),'Storage Account'))]",          
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.8",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[variables('scriptDownload')]"
              ],
              "commandToExecute": "[variables('commandToExecute')]"
            },
            "protectedSettings": {
              "storageAccountName": "[parameters('storageAccountName')]",
              "storageAccountKey": "[parameters('storageAccountKey')]"
            }
          }
        }
      ]
    },
    {
      "name": "[variables('vmIP01Name')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[parameters('location')]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    }
  ]
}
